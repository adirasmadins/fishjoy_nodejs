////////////////////////////////////////
// CacheSkill
// 技能日志相关数据缓存
//--------------------------------------
// 如何使用
// var CacheSkill = require('src/buzz/cache/CacheSkill');
// CacheSkill.func();
////////////////////////////////////////

//==============================================================================
// import
//==============================================================================
// var StringUtil = require('../StringUtil');
// var DaoSkill = require('../../dao/dao_link');


//==============================================================================
// constant
//==============================================================================
var ERROR = 1;
var DEBUG = 0;


//==============================================================================
// global variable
//==============================================================================
// 使用说明: 定时存储记录, 存储时用队列方式
// 记录下当前长度len, 从队列中移除len个数据存入数据库, 等待下个周期
// 每一条记录格式如下
/**
skill = 
{
    account_id: bigint,
    skill_id: int,
    gain: int,
    cost: int,
    total: int,
    log_at: timestamp,
    nickname: 0,
}
 */
var gSkillLogCache = [];


//==============================================================================
// public
//==============================================================================

//------------------------------------------------------------------------------
// definition
//------------------------------------------------------------------------------
// 缓存技能日志日志相关
exports.push = push;
exports.cache = cache;
exports.length = length;

/**
 * 需要记录技能日志记录则设置为1, 否则设置为0.
 */
var RECORD_SKILL = 1;
exports.RECORD_SKILL = RECORD_SKILL;


//------------------------------------------------------------------------------
// implement
//------------------------------------------------------------------------------

/**
 * 检测gSkillLogCache长度, 超过11000条数据时将前面的10000条写入数据库中
 */
function push(data) {
    if (RECORD_SKILL) {
        gSkillLogCache.push(data);
    }
}

/**
 * 将gSkillLogCache全部写入数据库中
 */
function cache() {
    return gSkillLogCache;
}

/**
 * 将gSkillLogCache全部写入数据库中
 */
function length() {
    return gSkillLogCache.length;
}

