global.logger = console;
const {MysqlConnector, RedisConnector} = require('../app/database/dbclient/');
const RewardModel = require('../app/utils/account/RewardModel');
const designCfgUtils = require('../app/utils/designCfg/designCfgUtils');
const redisAccountSync = require('../app/utils/redisAccountSync');
const REDISKEY = require('../app/database/consts').REDISKEY;
const {mysql, redis} = require('../config/db');
const fs = require('fs');
let uids = [21372
    ,67849
    ,45642
    ,61543
    ,22044
    ,28945
    ,14912
    ,24277
    ,24283
    ,26300
    ,38600
    ,15241
    ,68074
    ,2607
    ,31360
    ,64934
    ,667
    ,24262
    ,49411
    ,5544
    ,56195
    ,29040
    ,5561
    ,21849
    ,31182
    ,2570
    ,27352
    ,43856
    ,37740
    ,44939
    ,12532
    ,48596
    ,35348
    ,16042
    ,33687
    ,62740
    ,43605
    ,17598
    ,1709
    ,24970
    ,141
    ,4637
    ,32138
    ,67261
    ,31293
    ,11131
    ,23816
    ,23803
    ,29935
    ,6104
    ,42989
    ,66797
    ,36351
    ,54219
    ,62182
    ,55710
    ,24265
    ,3882
    ,56063
    ,11578
    ,41568
    ,15444
    ,54794
    ,9626
    ,55450
    ,40194
    ,255
    ,65
    ,65584
    ,10370
    ,9137
    ,4333
    ,4762
    ,13441
    ,43322
    ,37738
    ,41427
    ,33013
    ,59805
    ,10015
    ,63612
    ,32922
    ,64309
    ,61916
    ,21235
    ,30828
    ,762
    ,12567
    ,47984
    ,50590
    ,2207
    ,579
    ,13249
    ,25423
    ,44230
    ,12413
    ,21392
    ,38756
    ,43224
    ,42110
    ,34610
    ,6023
    ,52363
    ,67736
    ,10715
    ,61743
    ,63611
    ,34536
    ,55824
    ,10091
    ,38103
    ,1603
    ,2677
    ,53057
    ,18203
    ,29552
    ,45299
    ,39948
    ,67930
    ,40767
    ,8217
    ,2355
    ,22393
    ,19406
    ,62596
    ,15197
    ,41832
    ,20546
    ,33026
    ,5675
    ,39234
    ,1
    ,51943
    ,53230
    ,42433
    ,21141
    ,39453
    ,10736
    ,49460
    ,41520
    ,65189
    ,67922
    ,3446
    ,41676
    ,47942
    ,12393
    ,3307
    ,44081
    ,15858
    ,43155
    ,47536
    ,22679
    ,4951
    ,44309
    ,60392
    ,21269
    ,59031
    ,42359
    ,44264
    ,7171
    ,46632
    ,46217
    ,39997
    ,31170
    ,11728
    ,22827
    ,27714
    ,61702
    ,24325
    ,63109
    ,38287
    ,19329
    ,29132
    ,68211
    ,3506
    ,61927
    ,20055
    ,24488
    ,37692
    ,31603
    ,3203
    ,66319
    ,15891
    ,61789
    ,43722
    ,6096
    ,8804
    ,38447
    ,1249
    ,14965
    ,962
    ,60467
    ,40033
    ,40289
    ,67088
    ,2579
    ,48074
    ,67557
    ,50064
    ,51822
    ,48513
    ,67660
    ,756
    ,26572
    ,27804
    ,24188
    ,16115
    ,51142
    ,52896
    ,26648
    ,16933
    ,40159
    ,2860
    ,56412
    ,38778
    ,67801
    ,188
    ,45053
    ,49327
    ,53602
    ,65626
    ,24362
    ,68104
    ,3089
    ,50558
    ,54757
    ,60596
    ,54047
    ,31623
    ,2459
    ,16872
    ,710
    ,31
    ,68108
    ,19337
    ,19005
    ,67230
    ,14181
    ,17
    ,67837
    ,36393
    ,34065
    ,4911
    ,13977
    ,6025
    ,45416
    ,20201
    ,18857
    ,24290
    ,5417
    ,57061
    ,18733
    ,14357
    ,67756
    ,15616
    ,18127
    ,55830
    ,29523
    ,261
    ,36209
    ,45295
    ,50787
    ,19486
    ,21061
    ,18596
    ,40553
    ,46706
    ,52773
    ,67787
    ,39965
    ,8270
    ,23614
    ,44560
    ,33490
    ,67752
    ,41463
    ,67558
    ,56840
    ,42517
    ,1734
    ,67995
    ,29128
    ,1602
    ,68179
    ,47773
    ,37058
    ,39208
    ,17134
    ,3899
    ,49486
    ,9879
    ,65801
    ,24831
    ,53807
    ,41690
    ,408
    ,57107
    ,38436
    ,67698
    ,33853
    ,21221
    ,43660
    ,26060
    ,6845
    ,43661
    ,13322
    ,54555
    ,33588
    ,57788
    ,3210
    ,148
    ,68172
    ,23991
    ,22104
    ,13358
    ,39595
    ,67927
    ,42423
    ,49370
    ,54795
    ,31216
    ,46953
    ,68147
    ,15400
    ,67464
    ,24415
    ,27484
    ,68122
    ,40671
    ,7463
    ,54676
    ,19973
    ,13835
    ,66807
    ,29619
    ,63006
    ,5673
    ,59875
    ,12170
    ,52368
    ,52824
    ,58100
    ,1682
    ,22055
    ,67882
    ,6447
    ,60023
    ,16877
    ,17280
    ,68289
    ,4036
    ,41777
    ,3718
    ,63544
    ,46008
    ,68316
    ,52627
    ,55765
    ,8337
    ,47344
    ,68281
    ,39429
    ,64727
    ,67924
    ,44501
    ,24327
    ,23400
    ,44027
    ,40129
    ,59303
    ,27378
    ,66426
    ,60056
    ,42846
    ,23116
    ,40002
    ,34667
    ,6662
    ,22862
    ,34404
    ,6499
    ,18236
    ,42612
    ,4675
    ,59176
    ,54932
    ,41606
    ,41296
    ,18585
    ,53084
    ,611
    ,50916
    ,34144
    ,42947
    ,66436
    ,27600
    ,65231
    ,13681
    ,16579
    ,2752
    ,7715
    ,190
    ,3324
    ,14269
    ,65093
    ,10627
    ,59608
    ,4447
    ,6145
    ,37700
    ,12655
    ,64173
    ,42625
    ,22019
    ,13489
    ,4569
    ,43837
    ,24328
    ,2891
    ,215
    ,31239
    ,18150
    ,196
    ,67886
    ,41102
    ,2143
    ,67644
    ,27904
    ,64460
    ,26700
    ,16923
    ,64976
    ,48198
    ,26283
    ,27862
    ,30739
    ,22476
    ,6751
    ,64820
    ,2998
    ,33096
    ,30
    ,3573
    ,61020
    ,54957
    ,9601
    ,68105
    ,39643
    ,36713
    ,67893
    ,41678
    ,13189
    ,17000
    ,18633
    ,24239
    ,63102
    ,45350
    ,41157
    ,6122
    ,59465
    ,1028
    ,2558
    ,45043
    ,68402
    ,9701
    ,9719
    ,68014
    ,67720
    ,53616
    ,27844
    ,57998
    ,62137
    ,43784
    ,46256
    ,20418
    ,33865
    ,59204
    ,40502
    ,25108
    ,3961
    ,62994
    ,8384
    ,25585
    ,9973
    ,20964
    ,24124
    ,19054
    ,63861
    ,64684
    ,21859
    ,46726
    ,32915
    ,45666
    ,67966
    ,791
    ,18306
    ,33592
    ,38810
    ,37568
    ,26668
    ,55063
    ,34006
    ,42721
    ,68286
    ,31688
    ,60627
    ,732
    ,227
    ,48301
    ,67678
    ,43024
    ,34423
    ,6073
    ,67938
    ,31040
    ,3113
    ,25049
    ,25641
    ,313
    ,3413
    ,22138
    ,67179
    ,9211
    ,66962
    ,41413
    ,8805
    ,1712
    ,21870
    ,66418
    ,54276
    ,48272
    ,66769
    ,68204
    ,68406
    ,67799
    ,59588
    ,1453
    ,42960
    ,64503
    ,65338
    ,35239
    ,5589
    ,67553
    ,67510
    ,68163
    ,53440
    ,65910
    ,34787
    ,6626
    ,33434
    ,43958
    ,43799
    ,7122
    ,60399
    ,30986
    ,38306
    ,39755
    ,2313
    ,4154
    ,67436
    ,67899
    ,68008
    ,64006
    ,67019
    ,3618
    ,66402
    ,33993
    ,39152
    ,24131
    ,10507
    ,68430
    ,43169
    ,54915
    ,24437
    ,19274
    ,22580
    ,231
    ,2653
    ,29390
    ,49047
    ,41675
    ,3423
    ,350
    ,62609
    ,50888
    ,9517
    ,48614
    ,2715
    ,47989
    ,68029
    ,21319
    ,1629
    ,2175
    ,36723
    ,68280
    ,59143
    ,21742
    ,1492
    ,67980
    ,67769
    ,48575
    ,42109
    ,700
    ,295
    ,12847
    ,30702
    ,27189
    ,42793
    ,37076
    ,17429
    ,49332
    ,7347
    ,19433
    ,57420
    ,22176
    ,14638
    ,8739
    ,34761
    ,67582
    ,54193
    ,53268
    ,21983
    ,4094
    ,67813
    ,13899
    ,12806
    ,1687
    ,67811
    ,65048
    ,67791
    ,52730
    ,4038
    ,33911
    ,2331
    ,64926
    ,67830
    ,18902
    ,28982
    ,2094
    ,19346
    ,4736
    ,35965
    ,14594
    ,53756
    ,16649
    ,67865
    ,33876
    ,39821
    ,2505
    ,42911
    ,37602
    ,18194
    ,7786
    ,49462
    ,62409
    ,50634
    ,54061
    ,47142
    ,18482
    ,323
    ,46585
    ,26005
    ,3585
    ,61758
    ,954
    ,28656
    ,23093
    ,24133
    ,48290
    ,1179
    ,62102
    ,61110
    ,33989
    ,30401
    ,36353
    ,21557
    ,34977
    ,59441
    ,44430
    ,66056
    ,27694
    ,56382
    ,53015
    ,29392
    ,37170
    ,17379
    ,9738
    ,49449
    ,43302
    ,1974
    ,3345
    ,5183
    ,41543
    ,54783
    ,34816
    ,31709
    ,1206
    ,39129
    ,36717
    ,67374
    ,20659
    ,3377
    ,41749
    ,19768
    ,45179
    ,41878
    ,44137
    ,8111
    ,43327
    ,26171
    ,53610
    ,68307
    ,54044
    ,10163
    ,6798
    ,7862
    ,51704
    ,27260
    ,14581
    ,68375
    ,67338
    ,68386
    ,59860
    ,28948
    ,10174
    ,15859
    ,44194
    ,49577
    ,38159
    ,21790
    ,17435
    ,66905
    ,48726
    ,21637
    ,28663
    ,66483
    ,67447
    ,32836
    ,26407
    ,59454
    ,51303
    ,21608
    ,364
    ,68196
    ,39586
    ,36923
    ,269
    ,67330
    ,68183
    ,66575
    ,51023
    ,68215
    ,21250
    ,33316
    ,14052
    ,67222
    ,64379
    ,64370
    ,34362
    ,427
    ,68392
    ,68368
    ,67888
    ,44142
    ,38615
    ,29580
    ,12807
    ,42776
    ,19691
    ,3893
    ,68089
    ,38391
    ,38389
    ,39288
    ,62936
    ,68268
    ,45006
    ,54666
    ,36716
    ,8593
    ,3298
    ,24286
    ,5991
    ,68203
    ,68000
    ,68333
    ,43421
    ,54390
    ,48417
    ,57004
    ,44151
    ,140
    ,14933
    ,9515
    ,60338
    ,53454
    ,7120
    ,4450
    ,9631
    ,25418
    ,32699
    ,67860
    ,43700
    ,68169
    ,68100
    ,63840
    ,31936
    ,5403
    ,1270
    ,59445
    ,34978
    ,262
    ,27247
    ,44655
    ,54879
    ,33228
    ,1260
    ,3881
    ,68114
    ,67117
    ,50512
    ,33164
    ,10962
    ,67873
    ,59685
    ,35608
    ,19617
    ,243
    ,60763
    ,52881
    ,59448
    ,19674
    ,552
    ,68256
    ,67912
    ,56864
    ,19499
    ,38979
    ,360
    ,6283
    ,1460
    ,25147
    ,606
    ,18401
    ,66148
    ,23331
    ,838
    ,2397
    ,5804
    ,4289
    ,6060
    ,64620
    ,64197
    ,49864
    ,38281
    ,4131
    ,6732
    ,67212
    ,64030
    ,46333
    ,18132
    ,14946
    ,67074
    ,38591
    ,19244
    ,8187
    ,68273
    ,45965
    ,57464
    ,8581
    ,64527
    ,61395
    ,48681
    ,32626
    ,331
    ,2723
    ,68200
    ,46905
    ,58189
    ,60331
    ,40693
    ,46909
    ,20382
    ,1695
    ,6839
    ,2584
    ,60812
    ,67688
    ,50676
    ,44747
    ,31165
    ,4137
    ,19836
    ,4636
    ,61260
    ,65021
    ,14722
    ,7293
    ,65191
    ,61192
    ,21719
    ,30696
    ,9687
    ,10529
    ,66065
    ,29804
    ,987
    ,16127
    ,150
    ,59688
    ,30901
    ,1474
    ,12888
    ,67182
    ,37552
    ,44334
    ,29627
    ,4027
    ,17730
    ,15713
    ,17747
    ,3908
    ,66165
    ,68005
    ,53950
    ,28947
    ,67471
    ,64303
    ,67621
    ,67828
    ,53398
    ,53633
    ,44047
    ,30953
    ,22221
    ,20279
    ,34604
    ,6480
    ,18076
    ,67100
    ,67649
    ,21386
    ,3409
    ,13907
    ,10993
    ,12983
    ,3494
    ,63505
    ,67745
    ,50073
    ,33895
    ,67203
    ,45472
    ,52941
    ,37791
    ,36733
    ,7131
    ,10077
    ,67778
    ,57265
    ,57065
    ,55454
    ,48260
    ,30987
    ,37634
    ,9086
    ,3608
    ,12570
    ,67336
    ,66703
    ,43334
    ,50968
    ,49067
    ,43413
    ,31359
    ,14726
    ,68360
    ,65889
    ,67958
    ,51342
    ,9017
    ,68024
    ,45414
    ,46281
    ,31343
    ,39221
    ,23156
    ,1472
    ,17488
    ,5082
    ,11217
    ,68350
    ,42530
    ,23765
    ,5543
    ,13370
    ,68099
    ,67898
    ,67928
    ,45954
    ,38131
    ,21200
    ,9992
    ,300
    ,64476
    ,66842
    ,45378
    ,58581
    ,53547
    ,38538
    ,869
    ,64520
    ,46044
    ,52402
    ,24819
    ,38502
    ,8929
    ,8181
    ,13694
    ,67836
    ,67973
    ,67307
    ,68439
    ,52744
    ,58320
    ,58378
    ,29701
    ,18476
    ,7452
    ,19116
    ,54990
    ,53746
    ,50730
    ,21240
    ,29830
    ,18680
    ,4291
    ,65033
    ,66278
    ,64462
    ,68003
    ,39332
    ,31374
    ,37856
    ,8392
    ,1730
    ,68054
    ,68004
    ,68086
    ,46608
    ,52732
    ,39397
    ,23497
    ,3132
    ,4066
    ,62862
    ,66013
    ,43090
    ,45145
    ,37288
    ,37561
    ,19091
    ,16111
    ,14065
    ,68075
    ,68192
    ,68181
    ,68259
    ,64843
    ,67839
    ,50717
    ,26547
    ,37221
    ,17362
    ,1373
    ,1994
    ,10316
    ,64060
    ,65688
    ,67089
    ,46915
    ,43157
    ,24540
    ,27220
    ,31337
    ,65869
    ,67758
    ,50545
    ,45026
    ,23625
    ,30134
    ,36912
    ,20601
    ,11890
    ,3885
    ,9501
    ,769
];
let items  = ['i007','i210','i211','i212','w501','w502','w503','w504','w505','w506','w507','w508','w509','w510','w511','w512','w513','w514','w515'];

class MissionTaskTransfer {
    async start() {
        this._total = 0;
        this._redisConnector = new RedisConnector();
        let result = await this._redisConnector.start(redis);
        if (!result) {
            process.exit(0);
            return;
        }

        this._mysqlConnector = new MysqlConnector();
        result = await this._mysqlConnector.start(mysql);
        if (!result) {
            process.exit(0);
            return;
        }


        await this.resetGold();
        await this.resetWeapon();
        await this.resetPackages();
    }

    async resetGold() {
        let sql = "select total from tbl_gold_log where account_id=? and log_at>='2018-05-15 19:00:00' order by log_at asc limit 0,1";
        for (let i = 0; i < uids.length; i++) {
            let rows = await mysqlConnector.query(sql, [uids[i]]);
            if (rows && rows[0]) {
                let gold = rows[0].total;
                if (!isNaN(Number(gold))) {
                    let cur_gold = await redisConnector.hget(REDISKEY.GOLD, uids[i]);
                    if(cur_gold > gold){
                        await redisConnector.hset(REDISKEY.GOLD, uids[i], gold);
                        logger.error('作弊玩家', uids[i], '金币重置为', gold);
                    }
                }
            }
        }
    }

    async resetWeapon() {
        for (let i = 0; i < uids.length; i++) {
            let weapon_level = await redisConnector.hget(REDISKEY.WEAPON, uids[i]);
            if (weapon_level > 5) {
                await redisConnector.hset(REDISKEY.WEAPON, uids[i], 5);
                await redisConnector.hset(REDISKEY.WEAPON_ENERGY, uids[i], JSON.stringify({
                    "1": 0,
                    "5": 0
                }));
                logger.error('作弊玩家', uids[i], '武器重置为', 5);
            }
        }
    }

    async resetPackages(){
        for (let i = 0; i < uids.length; i++) {
            let package1 = await redisConnector.hget(REDISKEY.PACKAGE, uids[i]);
            logger.error('作弊玩家', uids[i], '包裹数据', package1);
            if(package1){
                for(let key1 in package1){
                    let obj = package1[key1];
                    if(obj){
                        for(let key2 in obj){
                            if(items.indexOf(key2) != -1){
                                package1[key1][key2] = 0;
                            }
                        }
                    }

                }
                await redisConnector.hset(REDISKEY.PACKAGE, uids[i], JSON.stringify(package1));
                logger.error('作弊玩家', uids[i], '包裹数据重置为', package1);
            }
        }
    }


}

let test = new MissionTaskTransfer();
test.start();